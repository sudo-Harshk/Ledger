rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }
    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    function hasUserDocument() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }
    function isTeacher() {
      return isSignedIn() && hasUserDocument() && getRole() == 'teacher';
    }
    function isAdmin() {
      return isSignedIn() && hasUserDocument() && getRole() == 'admin';
    }
    function isStudent() {
      return isSignedIn() && hasUserDocument() && getRole() == 'student';
    }
    function isTeacherOrAdmin() {
      return isSignedIn() && hasUserDocument() && (getRole() == 'teacher' || getRole() == 'admin');
    }
    function isValidUserUpdate() {
      let protectedFields = ['role','monthlyFee','totalDueByMonth','lastTotalDueUpdate'].toSet();
      let changed = request.resource.data.diff(resource.data).affectedKeys();
      return !changed.hasAny(protectedFields);
    }

    // --- Collection Rules ---

    // Rules for the 'users' collection
    match /users/{userId} {
      
      // A user can read their OWN document
      allow read: if isSignedIn() && request.auth.uid == userId;
      
      // A Teacher/Admin can read OTHER user documents
      allow read: if isSignedIn() 
                    && request.auth.uid != userId 
                    && isTeacherOrAdmin();
      
      // --- FIX FOR STUDENT LOGIN ---
      // WARNING: "|| true" opens a security risk. It allows ANYONE
      // (even unauthenticated users) to query the 'users' collection.
      // This is required for the "username-to-email" lookup on the
      // login page to work without a backend Cloud Function.
      // This rule is a trade-off: it enables your feature but
      // allows a malicious user to guess usernames.
      allow list: if isTeacherOrAdmin() || true; 

      // CREATE: Teachers/Admins or a new user creating their own doc.
      allow create: if isSignedIn() && (isTeacherOrAdmin() || request.auth.uid == userId);

      // UPDATE: Students can only modify non-protected fields.
      allow update: if isSignedIn() && (
        (request.auth.uid == userId && isValidUserUpdate())
        ||
        isTeacherOrAdmin()
      );

      // DELETE: Only Teachers and Admins can delete user documents.
      allow delete: if isTeacherOrAdmin();

      // Rules for the 'monthlySummaries' subcollection
      match /monthlySummaries/{monthId} {
        // Needed for get()
        allow read: if isSignedIn() && (request.auth.uid == userId || isTeacherOrAdmin());
        // Needed for queries/collectionGroup
        allow list: if isSignedIn() && (request.auth.uid == userId || isTeacherOrAdmin());
        allow write: if isTeacherOrAdmin();
      }
    }

    // Rules for the 'attendance' collection
    match /attendance/{attendanceId} {
      
      // A student can read their OWN records, Teachers/Admins can read all
      allow read: if isSignedIn() && (request.auth.uid == resource.data.studentId || isTeacherOrAdmin());

      allow list: if isSignedIn();

      // CREATE: Student can create 'pending' record, Teachers/Admins can create any
      allow create: if (isSignedIn() && ((request.auth.uid == request.resource.data.studentId && request.resource.data.status == 'pending')
                      || isTeacherOrAdmin()));

      allow update: if isSignedIn() && isTeacherOrAdmin();
      allow delete: if isSignedIn() && isTeacherOrAdmin();
    }
    
    // Rules for the 'revenueSummaries' collection
    match /revenueSummaries/{summaryId} {
        allow read: if isSignedIn();
        allow list: if isSignedIn();
        allow write: if isSignedIn() && isTeacherOrAdmin();
    }

    // Rules for aggregated monthly attendance counts
    match /platformMonthlyAttendance/{monthId} {
      allow read: if isSignedIn();
      allow list: if isSignedIn();
      allow write: if isTeacherOrAdmin();
    }

    // Collection-group rules for monthlySummaries to support collectionGroup queries
    match /{path=**}/monthlySummaries/{monthId} {
      allow read: if isSignedIn() && isTeacherOrAdmin();
      allow list: if isSignedIn() && isTeacherOrAdmin();
    }
  }
}